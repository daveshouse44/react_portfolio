{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daves\\\\homework-bootcamp\\\\20-React\\\\React-Portfolio\\\\my-app\\\\react_portfolio\\\\src\\\\components\\\\Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // Importing helper function to check if email is valid\n\nimport { validateEmail } from \"../utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contact() {\n  _s();\n\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [message, setMessage] = useState(\"\");\n  const [userMessage, setUserMessage] = useState(\"\");\n\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n\n    if (id === \"email\") {\n      setEmail(value);\n    } else if (id === \"name\") {\n      setName(value);\n    } else {\n      setMessage(value);\n    }\n\n    return;\n  };\n\n  const validateInput = e => {\n    if (!e.target.value.length) {\n      setUserMessage(`Your ${e.target.id} is required!`);\n    } else {\n      setUserMessage(\"\");\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {\n      setUserMessage(\"Your name is required!\");\n    } else if (!email) {\n      setUserMessage(\"Your email is required!\");\n    } else if (!message) {\n      setUserMessage(\"Your message is required!\");\n    } else {\n      setUserMessage(\"\");\n    }\n\n    const isValid = validateEmail(email);\n\n    if (!isValid) {\n      setUserMessage(\"Your email is invalid!\");\n    } else {\n      setUserMessage(`Thank you, ${name}!`);\n    }\n\n    const values = `${name}, ${email}, ${message}`;\n    console.log(values); // Add post to Formspree\n    // this.setState({ isSubmitting: true });\n\n    fetch(\"https://formspree.io/f/xayarkno\", {\n      mode: \"no-cors\",\n      method: \"POST\",\n      body: JSON.stringify(values),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      console.log(res); // this.setState({ isSubmitting: false });\n\n      return res.json();\n    }).then(data => console.log(data)).catch(err => console.error(\"Error:\", err)); // setName(\"\");\n    // setEmail(\"\");\n    // setMessage(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"contact-form\",\n      action: \"https://formspree.io/f/xayarkno\",\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoComplete: \"false\",\n          name: \"name\",\n          placeholder: \"Enter name\",\n          value: name,\n          onChange: handleChange,\n          onBlur: validateInput,\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          autoComplete: \"false\",\n          name: \"_replyto\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: handleChange,\n          onBlur: validateInput,\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          rows: \"5\",\n          placeholder: \"Thanks for your feedback\",\n          value: message,\n          onChange: handleChange,\n          onBlur: validateInput,\n          id: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), userMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: userMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        type: \"submit\",\n        \"data-testid\": \"button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contact, \"RrBvKeQa5DhAyg7hs/+xMTs8d9E=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["C:/Users/daves/homework-bootcamp/20-React/React-Portfolio/my-app/react_portfolio/src/components/Contact.js"],"names":["React","useState","validateEmail","Contact","name","setName","email","setEmail","message","setMessage","userMessage","setUserMessage","handleChange","e","id","value","target","validateInput","length","handleSubmit","preventDefault","isValid","values","console","log","fetch","mode","method","body","JSON","stringify","headers","then","res","json","data","catch","err","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// Importing helper function to check if email is valid\nimport { validateEmail } from \"../utils/helpers\";\n\nfunction Contact() {\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [message, setMessage] = useState(\"\");\n\n  const [userMessage, setUserMessage] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n\n    if (id === \"email\") {\n      setEmail(value);\n    } else if (id === \"name\") {\n      setName(value);\n    } else {\n      setMessage(value);\n    }\n    return;\n  };\n\n  const validateInput = (e) => {\n    if (!e.target.value.length) {\n      setUserMessage(`Your ${e.target.id} is required!`);\n    } else {\n      setUserMessage(\"\");\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!name) {\n      setUserMessage(\"Your name is required!\");\n    } else if (!email) {\n      setUserMessage(\"Your email is required!\");\n    } else if (!message) {\n      setUserMessage(\"Your message is required!\");\n    } else {\n      setUserMessage(\"\");\n    }\n\n    const isValid = validateEmail(email);\n\n    if (!isValid) {\n      setUserMessage(\"Your email is invalid!\");\n    } else {\n      setUserMessage(`Thank you, ${name}!`);\n    }\n\n    const values = (`${name}, ${email}, ${message}`);\n    console.log(values);\n\n    // Add post to Formspree\n    // this.setState({ isSubmitting: true });\n    fetch(\"https://formspree.io/f/xayarkno\", {\n      mode: \"no-cors\",\n      method: \"POST\",\n      body: JSON.stringify(values),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        // this.setState({ isSubmitting: false });\n        return res.json();\n      })\n      .then((data) => console.log(data))\n      .catch((err) => console.error(\"Error:\", err));\n\n    // setName(\"\");\n    // setEmail(\"\");\n    // setMessage(\"\");\n  };\n\n  return (\n    <section>\n      <h1>Contact me</h1>\n      <form\n        id=\"contact-form\"\n        action=\"https://formspree.io/f/xayarkno\"\n        method=\"POST\"\n      >\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            autoComplete=\"false\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={handleChange}\n            onBlur={validateInput}\n            id=\"name\"\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            type=\"email\"\n            autoComplete=\"false\"\n            name=\"_replyto\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={handleChange}\n            onBlur={validateInput}\n            id=\"email\"\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"message\">Message:</label>\n          <textarea\n            name=\"message\"\n            rows=\"5\"\n            placeholder=\"Thanks for your feedback\"\n            value={message}\n            onChange={handleChange}\n            onBlur={validateInput}\n            id=\"message\"\n          />\n        </div>\n        {userMessage && (\n          <div>\n            <p className=\"error-text\">{userMessage}</p>\n          </div>\n        )}\n        <button onClick={handleSubmit} type=\"submit\" data-testid=\"button\">\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}