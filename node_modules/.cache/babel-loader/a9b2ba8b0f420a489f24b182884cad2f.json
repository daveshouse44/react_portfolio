{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daves\\\\homework-bootcamp\\\\20-React\\\\React-Portfolio\\\\my-app\\\\react_portfolio\\\\src\\\\components\\\\Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // Importing helper function to check if email is valid\n\nimport { validateEmail } from \"../utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contact() {\n  _s();\n\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [message, setMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"name\") {\n      setName(value);\n    } else {\n      setMessage(value);\n    }\n\n    return;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {\n      setErrorMessage(\"Your name is required!\");\n    } else if (!email) {\n      setErrorMessage(\"Your email is required!\");\n    } else if (!message) {\n      setErrorMessage(\"Your message is required!\");\n    } else {\n      setErrorMessage(\"\");\n    }\n\n    const isValid = validateEmail(email);\n\n    if (!isValid) {\n      setErrorMessage(\"Your email is invalid!\");\n    } else {\n      setErrorMessage();\n    }\n\n    setName(\"\");\n    setEmail(\"\");\n    setMessage(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"contact-form\",\n      action: \"https://formspree.io/f/myylrdkz\",\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoComplete: \"false\",\n          name: \"name\",\n          placeholder: \"Enter name\",\n          value: name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          autoComplete: \"false\",\n          name: \"email\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          rows: \"5\",\n          placeholder: \"Thanks for your feedback\",\n          value: message,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        \"data-testid\": \"button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contact, \"9nu84wtoAEq4BtG0+mXPGZYsRLI=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["C:/Users/daves/homework-bootcamp/20-React/React-Portfolio/my-app/react_portfolio/src/components/Contact.js"],"names":["React","useState","validateEmail","Contact","name","setName","email","setEmail","message","setMessage","errorMessage","setErrorMessage","handleChange","e","value","target","handleSubmit","preventDefault","isValid"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n// Importing helper function to check if email is valid\r\nimport { validateEmail } from \"../utils/helpers\";\r\n\r\nfunction Contact() {\r\n  let [name, setName] = useState(\"\");\r\n  let [email, setEmail] = useState(\"\");\r\n  let [message, setMessage] = useState(\"\");\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"name\") {\r\n      setName(value);\r\n    } else {\r\n      setMessage(value);\r\n    }\r\n    return;\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name) {\r\n      setErrorMessage(\"Your name is required!\");\r\n    } else if (!email) {\r\n      setErrorMessage(\"Your email is required!\");\r\n    } else if (!message) {\r\n      setErrorMessage(\"Your message is required!\");\r\n    } else {\r\n      setErrorMessage(\"\");\r\n    }\r\n\r\n    const isValid = validateEmail(email);\r\n\r\n    if (!isValid) {\r\n      setErrorMessage(\"Your email is invalid!\");\r\n    } else {\r\n      setErrorMessage()\r\n    }\r\n\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setMessage(\"\");\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <h1>Contact me</h1>\r\n      <form\r\n        id=\"contact-form\"\r\n        action=\"https://formspree.io/f/myylrdkz\"\r\n        method=\"POST\"\r\n      >\r\n        <div>\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            autoComplete=\"false\"\r\n            name=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            type=\"email\"\r\n            autoComplete=\"false\"\r\n            name=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"message\">Message:</label>\r\n          <textarea\r\n            name=\"message\"\r\n            rows=\"5\"\r\n            placeholder=\"Thanks for your feedback\"\r\n            value={message}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {errorMessage && (\r\n          <div>\r\n            <p className=\"error-text\">{errorMessage}</p>\r\n          </div>\r\n        )}\r\n        <button onClick={handleSubmit} data-testid=\"button\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n"]},"metadata":{},"sourceType":"module"}