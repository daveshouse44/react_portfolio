{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daves\\\\homework-bootcamp\\\\20-React\\\\React-Portfolio\\\\my-app\\\\react_portfolio\\\\src\\\\components\\\\Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // Importing helper function to check if email is valid\n\nimport { validateEmail } from \"../utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contact() {\n  _s();\n\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [message, setMessage] = useState(\"\");\n  const [userMessage, setUserMessage] = useState(\"\");\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    console.log(e.target);\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"name\") {\n      setName(value);\n    } else {\n      setMessage(value);\n    }\n\n    return;\n  };\n\n  const validateInput = e => {\n    if (!e.target.value.length) {\n      setUserMessage(`Your ${e.target.name} is required!`);\n    } else {\n      setUserMessage(\"\");\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {\n      setUserMessage(\"Your name is required!\");\n    } else if (!email) {\n      setUserMessage(\"Your email is required!\");\n    } else if (!message) {\n      setUserMessage(\"Your message is required!\");\n    } else {\n      setUserMessage(\"\");\n    }\n\n    const isValid = validateEmail(email);\n\n    if (!isValid) {\n      setUserMessage(\"Your email is invalid!\");\n    } else {\n      setUserMessage(`Thank you, ${name}!`);\n    }\n\n    setName(\"\");\n    setEmail(\"\");\n    setMessage(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"contact-form\",\n      action: \"https://formspree.io/f/myylrdkz\",\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"name\",\n          autoComplete: \"false\",\n          name: \"name\",\n          placeholder: \"Enter name\",\n          value: name,\n          onChange: handleChange,\n          onBlur: validateInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          autoComplete: \"false\",\n          name: \"_replyto\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: handleChange,\n          onBlur: validateInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          rows: \"5\",\n          placeholder: \"Thanks for your feedback\",\n          value: message,\n          onChange: handleChange,\n          onBlur: validateInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), userMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: userMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        \"data-testid\": \"button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contact, \"RrBvKeQa5DhAyg7hs/+xMTs8d9E=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["C:/Users/daves/homework-bootcamp/20-React/React-Portfolio/my-app/react_portfolio/src/components/Contact.js"],"names":["React","useState","validateEmail","Contact","name","setName","email","setEmail","message","setMessage","userMessage","setUserMessage","handleChange","e","value","type","target","console","log","validateInput","length","handleSubmit","preventDefault","isValid"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// Importing helper function to check if email is valid\nimport { validateEmail } from \"../utils/helpers\";\n\nfunction Contact() {\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [message, setMessage] = useState(\"\");\n\n  const [userMessage, setUserMessage] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value, type } = e.target;\n    console.log(e.target)\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"name\") {\n      setName(value);\n    } else {\n      setMessage(value);\n    }\n    return;\n  };\n\n  const validateInput = (e) => {\n    if (!e.target.value.length) {\n      setUserMessage(`Your ${e.target.name} is required!`);\n    } else {\n      setUserMessage(\"\");\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!name) {\n      setUserMessage(\"Your name is required!\");\n    } else if (!email) {\n      setUserMessage(\"Your email is required!\");\n    } else if (!message) {\n      setUserMessage(\"Your message is required!\");\n    } else {\n      setUserMessage(\"\");\n    }\n\n    const isValid = validateEmail(email);\n\n    if (!isValid) {\n      setUserMessage(\"Your email is invalid!\");\n    } else {\n      setUserMessage(`Thank you, ${name}!`);\n    }\n\n    setName(\"\");\n    setEmail(\"\");\n    setMessage(\"\");\n  };\n\n  return (\n    <section>\n      <h1>Contact me</h1>\n      <form\n        id=\"contact-form\"\n        action=\"https://formspree.io/f/myylrdkz\"\n        method=\"POST\"\n      >\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"name\"\n            autoComplete=\"false\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={handleChange}\n            onBlur={validateInput}\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            type=\"email\"\n            autoComplete=\"false\"\n            name=\"_replyto\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={handleChange}\n            onBlur={validateInput}\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"message\">Message:</label>\n          <textarea\n            name=\"message\"\n            rows=\"5\"\n            placeholder=\"Thanks for your feedback\"\n            value={message}\n            onChange={handleChange}\n            onBlur={validateInput}\n          />\n        </div>\n        {userMessage && (\n          <div>\n            <p className=\"error-text\">{userMessage}</p>\n          </div>\n        )}\n        <button onClick={handleSubmit} data-testid=\"button\">\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}